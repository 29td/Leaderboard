"use strict";(self.webpackChunkleaderboard=self.webpackChunkleaderboard||[]).push([[179],{433:()=>{const e=async()=>{const e=await fetch("https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/FmoE24YVTNvGFm4xwdfb/scores"),t=await e.json(),c=document.querySelector(".score-list");let n=t.result;n=n.sort(((e,t)=>t.score-e.score)),c.innerHTML="",n.forEach((e=>{(async(e,t)=>{const c=document.querySelector(".score-list"),n=document.createElement("tr");n.innerHTML=`\n        <td>${e}</td>\n        <td>${t}</td>\n        `,c.appendChild(n)})(e.user,e.score)}))},t=document.querySelector("#add-score"),c=document.querySelector(".refresh-btn");t.addEventListener("submit",(t=>{t.preventDefault();const c=document.getElementById("player-name"),n=document.getElementById("player-score");(async(t,c)=>{if(""!==t&&""!==c){const e=document.createElement("div");e.className="alert success",e.innerHTML='<i class="bi bi-check2-all"></i>',e.appendChild(document.createTextNode("Successfully added score"));const n=document.querySelector("#add-score"),o=document.querySelector(".btn-add-score");n.insertBefore(e,o),setTimeout((()=>document.querySelector(".alert").remove()),3e3),await fetch("https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/FmoE24YVTNvGFm4xwdfb/scores",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user:t,score:c})})}else if(""===t&&""===c){const e=document.createElement("div");e.className="alert invalid",e.innerHTML='<i class="bi bi-exclamation-octagon-fill"></i>',e.appendChild(document.createTextNode("Please fill in empty space!"));const t=document.querySelector("#add-score"),c=document.querySelector(".btn-add-score");t.insertBefore(e,c),setTimeout((()=>document.querySelector(".alert").remove()),5e3)}e()})(c.value,n.value),c.value="",n.value=""})),document.addEventListener("DOMContentLoaded",e),c.addEventListener("click",e)}},e=>{e(e.s=433)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5idW5kbGUuanMiLCJtYXBwaW5ncyI6Im1HQUVBLE1DY0EsRUFac0JBLFVBQ3BCLE1BQU1DLFFBQWlCQyxNQUFNLG9HQUN2QkMsUUFBYUYsRUFBU0csT0FDdEJDLEVBQWVDLFNBQVNDLGNBQWMsZUFDNUMsSUFBSUMsRUFBYUwsRUFBS00sT0FDdEJELEVBQWFBLEVBQVdFLE1BQUssQ0FBQ0MsRUFBR0MsSUFBTUEsRUFBRUMsTUFBUUYsRUFBRUUsUUFDbkRSLEVBQWFTLFVBQVksR0FDekJOLEVBQVdPLFNBQVNGLElEVExiLE9BQU9nQixFQUFNQyxLQUMxQixNQUFNQyxFQUFzQlosU0FBU0MsY0FBYyxlQUM3Q1ksRUFBTWIsU0FBU2MsY0FBYyxNQUNuQ0QsRUFBSUwsVUFBWSxpQkFDTkUsdUJBQ0FDLG1CQUVWQyxFQUFvQkcsWUFBWUYsRUFBSSxFQ0dwQyxDQUFTTixFQUFNUyxLQUFNVCxFQUFNQSxNQUFNLEdBQ2pDLEVDUkUsRUFBV1AsU0FBU0MsY0FBYyxjQUNsQ2dCLEVBQWtCakIsU0FBU0MsY0FBYyxnQkFFL0MsRUFBU2lCLGlCQUFpQixVQUFXQyxJQUNuQ0EsRUFBRUMsaUJBQ0YsTUFBTUMsRUFBZXJCLFNBQVNzQixlQUFlLGVBQ3ZDQyxFQUFnQnZCLFNBQVNzQixlQUFlLGdCQ1I1QjVCLE9BQU84QixFQUFNakIsS0FDL0IsR0FBYSxLQUFUaUIsR0FBeUIsS0FBVmpCLEVBQWMsQ0FDL0IsTUFBTWtCLEVBQU16QixTQUFTYyxjQUFjLE9BQ25DVyxFQUFJQyxVQUFZLGdCQUNoQkQsRUFBSWpCLFVBQVksbUNBQ2hCaUIsRUFBSVYsWUFBWWYsU0FBUzJCLGVBQWUsNkJBRXhDLE1BQU1DLEVBQVk1QixTQUFTQyxjQUFjLGNBQ25DNEIsRUFBTTdCLFNBQVNDLGNBQWMsa0JBQ25DMkIsRUFBVUUsYUFBYUwsRUFBS0ksR0FFNUJFLFlBQVcsSUFBTS9CLFNBQVNDLGNBQWMsVUFBVStCLFVBQVUsV0FDdERwQyxNQUFNLG1HQUFvRyxDQUM5R3FDLE9BQVEsT0FDUkMsUUFBUyxDQUNQLGVBQWdCLG9CQUVsQkMsS0FBTUMsS0FBS0MsVUFBVSxDQUNuQnJCLEtBQU1RLEVBQ05qQixXQUdOLE1BQU8sR0FBYSxLQUFUaUIsR0FBeUIsS0FBVmpCLEVBQWMsQ0FDdEMsTUFBTWtCLEVBQU16QixTQUFTYyxjQUFjLE9BQ25DVyxFQUFJQyxVQUFZLGdCQUNoQkQsRUFBSWpCLFVBQVksaURBQ2hCaUIsRUFBSVYsWUFBWWYsU0FBUzJCLGVBQWUsZ0NBRXhDLE1BQU1DLEVBQVk1QixTQUFTQyxjQUFjLGNBQ25DNEIsRUFBTTdCLFNBQVNDLGNBQWMsa0JBQ25DMkIsRUFBVUUsYUFBYUwsRUFBS0ksR0FFNUJFLFlBQVcsSUFBTS9CLFNBQVNDLGNBQWMsVUFBVStCLFVBQVUsSUFDOUQsQ0FDQSxHQUFlLEVEdkJmLENBRmtCWCxFQUFhaUIsTUFDWmYsRUFBY2UsT0FFakNqQixFQUFhaUIsTUFBUSxHQUNyQmYsRUFBY2UsTUFBUSxFQUFFLElBRzFCdEMsU0FBU2tCLGlCQUFpQixtQkFBb0IsR0FFOUNELEVBQWdCQyxpQkFBaUIsUUFBUyxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhZGVyYm9hcmQvLi9zcmMvYWRkU2NvcmVzLmpzIiwid2VicGFjazovL2xlYWRlcmJvYXJkLy4vc3JjL2Rpc3BsYXlTY29yZXMuanMiLCJ3ZWJwYWNrOi8vbGVhZGVyYm9hcmQvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbGVhZGVyYm9hcmQvLi9zcmMvc3VibWl0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICBpbXBvcnQvcHJlZmVyLWRlZmF1bHQtZXhwb3J0ICovXHJcblxyXG5jb25zdCBhZGRTY29yZSA9IGFzeW5jIChOYW1lLCBTY29yZSkgPT4ge1xyXG4gICAgY29uc3QgZGlzcGxheVNjb3JlU2VjdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zY29yZS1saXN0Jyk7XHJcbiAgICBjb25zdCByb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpO1xyXG4gICAgcm93LmlubmVySFRNTCA9IGBcclxuICAgICAgICA8dGQ+JHtOYW1lfTwvdGQ+XHJcbiAgICAgICAgPHRkPiR7U2NvcmV9PC90ZD5cclxuICAgICAgICBgO1xyXG4gICAgZGlzcGxheVNjb3JlU2VjdGlvbi5hcHBlbmRDaGlsZChyb3cpO1xyXG4gIH07XHJcbiAgXHJcbiAgZXhwb3J0IGRlZmF1bHQgYWRkU2NvcmU7IiwiLyogZXNsaW50LWRpc2FibGUgIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnQgKi9cclxuXHJcbmltcG9ydCBhZGRTY29yZSBmcm9tICcuL2FkZFNjb3Jlcy5qcyc7XHJcblxyXG5jb25zdCBkaXNwbGF5U2NvcmVzID0gYXN5bmMgKCkgPT4ge1xyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vdXMtY2VudHJhbDEtanMtY2Fwc3RvbmUtYmFja2VuZC5jbG91ZGZ1bmN0aW9ucy5uZXQvYXBpL2dhbWVzL0Ztb0UyNFlWVE52R0ZtNHh3ZGZiL3Njb3JlcycpO1xyXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgY29uc3QgZGlzcGxheVNjb3JlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNjb3JlLWxpc3QnKTtcclxuICBsZXQgc2NvcmVBcnJheSA9IGRhdGEucmVzdWx0O1xyXG4gIHNjb3JlQXJyYXkgPSBzY29yZUFycmF5LnNvcnQoKGEsIGIpID0+IGIuc2NvcmUgLSBhLnNjb3JlKTtcclxuICBkaXNwbGF5U2NvcmUuaW5uZXJIVE1MID0gJyc7XHJcbiAgc2NvcmVBcnJheS5mb3JFYWNoKChzY29yZSkgPT4ge1xyXG4gICAgYWRkU2NvcmUoc2NvcmUudXNlciwgc2NvcmUuc2NvcmUpO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGlzcGxheVNjb3JlczsiLCIvKiBlc2xpbnQtZGlzYWJsZSAgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCAqL1xyXG5cclxuaW1wb3J0IGRpc3BsYXlTY29yZXMgZnJvbSAnLi9kaXNwbGF5U2NvcmVzLmpzJztcclxuaW1wb3J0ICBzdWJtaXRTY29yZSBmcm9tICcuL3N1Ym1pdC5qcyc7XHJcblxyXG5jb25zdCBhZGRTY29yZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtc2NvcmUnKTtcclxuY29uc3QgcmVmcmVzaFNjb3JlQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJlZnJlc2gtYnRuJyk7XHJcblxyXG5hZGRTY29yZS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZSkgPT4ge1xyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxuICBjb25zdCBwbGF5ZXJOYW1lRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGxheWVyLW5hbWUnKTtcclxuICBjb25zdCBwbGF5ZXJTY29yZUVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BsYXllci1zY29yZScpO1xyXG4gIGNvbnN0IG5hbWVWYWx1ZSA9IHBsYXllck5hbWVFbC52YWx1ZTtcclxuICBjb25zdCBzY29yZVZhbHVlID0gcGxheWVyU2NvcmVFbC52YWx1ZTtcclxuICBzdWJtaXRTY29yZShuYW1lVmFsdWUsIHNjb3JlVmFsdWUpO1xyXG4gIHBsYXllck5hbWVFbC52YWx1ZSA9ICcnO1xyXG4gIHBsYXllclNjb3JlRWwudmFsdWUgPSAnJztcclxufSk7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZGlzcGxheVNjb3Jlcyk7XHJcblxyXG5yZWZyZXNoU2NvcmVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBkaXNwbGF5U2NvcmVzKTtcclxuIiwiLyogZXNsaW50LWRpc2FibGUgIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnQgKi9cclxuaW1wb3J0IGRpc3BsYXlTY29yZXMgZnJvbSAnLi9kaXNwbGF5U2NvcmVzLmpzJztcclxuXHJcbmNvbnN0IHN1Ym1pdFNjb3JlID0gYXN5bmMgKG5hbWUsIHNjb3JlKSA9PiB7XHJcbiAgaWYgKG5hbWUgIT09ICcnICYmIHNjb3JlICE9PSAnJykge1xyXG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBkaXYuY2xhc3NOYW1lID0gJ2FsZXJ0IHN1Y2Nlc3MnO1xyXG4gICAgZGl2LmlubmVySFRNTCA9ICc8aSBjbGFzcz1cImJpIGJpLWNoZWNrMi1hbGxcIj48L2k+JztcclxuICAgIGRpdi5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnU3VjY2Vzc2Z1bGx5IGFkZGVkIHNjb3JlJykpO1xyXG5cclxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtc2NvcmUnKTtcclxuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idG4tYWRkLXNjb3JlJyk7XHJcbiAgICBjb250YWluZXIuaW5zZXJ0QmVmb3JlKGRpdiwgYnRuKTtcclxuICAgIC8vIDMgc2Vjb25kcyB0aW1lb3V0XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGVydCcpLnJlbW92ZSgpLCAzMDAwKTtcclxuICAgIGF3YWl0IGZldGNoKCdodHRwczovL3VzLWNlbnRyYWwxLWpzLWNhcHN0b25lLWJhY2tlbmQuY2xvdWRmdW5jdGlvbnMubmV0L2FwaS9nYW1lcy9GbW9FMjRZVlROdkdGbTR4d2RmYi9zY29yZXMnLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIHVzZXI6IG5hbWUsXHJcbiAgICAgICAgc2NvcmUsXHJcbiAgICAgIH0pLFxyXG4gICAgfSk7XHJcbiAgfSBlbHNlIGlmIChuYW1lID09PSAnJyAmJiBzY29yZSA9PT0gJycpIHtcclxuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgZGl2LmNsYXNzTmFtZSA9ICdhbGVydCBpbnZhbGlkJztcclxuICAgIGRpdi5pbm5lckhUTUwgPSAnPGkgY2xhc3M9XCJiaSBiaS1leGNsYW1hdGlvbi1vY3RhZ29uLWZpbGxcIj48L2k+JztcclxuICAgIGRpdi5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnUGxlYXNlIGZpbGwgaW4gZW1wdHkgc3BhY2UhJykpO1xyXG5cclxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtc2NvcmUnKTtcclxuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idG4tYWRkLXNjb3JlJyk7XHJcbiAgICBjb250YWluZXIuaW5zZXJ0QmVmb3JlKGRpdiwgYnRuKTtcclxuICAgIC8vIFZhbmlzaCBpbiA1IHNlY29uZHNcclxuICAgIHNldFRpbWVvdXQoKCkgPT4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFsZXJ0JykucmVtb3ZlKCksIDUwMDApO1xyXG4gIH1cclxuICBkaXNwbGF5U2NvcmVzKCk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzdWJtaXRTY29yZTsiXSwibmFtZXMiOlsiYXN5bmMiLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YSIsImpzb24iLCJkaXNwbGF5U2NvcmUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzY29yZUFycmF5IiwicmVzdWx0Iiwic29ydCIsImEiLCJiIiwic2NvcmUiLCJpbm5lckhUTUwiLCJmb3JFYWNoIiwiTmFtZSIsIlNjb3JlIiwiZGlzcGxheVNjb3JlU2VjdGlvbiIsInJvdyIsImNyZWF0ZUVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsInVzZXIiLCJyZWZyZXNoU2NvcmVCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0IiwicGxheWVyTmFtZUVsIiwiZ2V0RWxlbWVudEJ5SWQiLCJwbGF5ZXJTY29yZUVsIiwibmFtZSIsImRpdiIsImNsYXNzTmFtZSIsImNyZWF0ZVRleHROb2RlIiwiY29udGFpbmVyIiwiYnRuIiwiaW5zZXJ0QmVmb3JlIiwic2V0VGltZW91dCIsInJlbW92ZSIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==